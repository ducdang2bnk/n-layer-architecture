"""Add price to products

Revision ID: 013aad2c3416
Revises: 
Create Date: 2024-09-24 14:31:26.001926

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '013aad2c3416'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_role_created_at', table_name='role')
    op.drop_index('ix_role_updated_at', table_name='role')
    op.drop_table('role')
    op.drop_index('ix_permission_created_at', table_name='permission')
    op.drop_index('ix_permission_updated_at', table_name='permission')
    op.drop_table('permission')
    op.drop_index('ix_user_created_at', table_name='user')
    op.drop_index('ix_user_updated_at', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_role_permission_relation_created_at', table_name='role_permission_relation')
    op.drop_index('ix_role_permission_relation_updated_at', table_name='role_permission_relation')
    op.drop_table('role_permission_relation')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role_permission_relation',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Created at'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Updated at'),
    sa.Column('created_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Created User'),
    sa.Column('updated_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Updated User'),
    sa.ForeignKeyConstraint(['created_uid'], ['user.id'], name='role_permission_relation_created_uid_fkey'),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name='role_permission_relation_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='role_permission_relation_role_id_fkey'),
    sa.ForeignKeyConstraint(['updated_uid'], ['user.id'], name='role_permission_relation_updated_uid_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', 'id', name='role_permission_relation_pkey')
    )
    op.create_index('ix_role_permission_relation_updated_at', 'role_permission_relation', ['updated_at'], unique=False)
    op.create_index('ix_role_permission_relation_created_at', 'role_permission_relation', ['created_at'], unique=False)
    op.create_table('user',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False, comment='Fullname'),
    sa.Column('username', sa.VARCHAR(length=32), autoincrement=False, nullable=False, comment='Username'),
    sa.Column('password', sa.VARCHAR(length=512), autoincrement=False, nullable=False, comment='Password'),
    sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=True, comment='Email'),
    sa.Column('phone', sa.VARCHAR(length=32), autoincrement=False, nullable=True, comment='Phone Number'),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Role ID'),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='is Active'),
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Created at'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Updated at'),
    sa.Column('created_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Created User'),
    sa.Column('updated_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Updated User'),
    sa.ForeignKeyConstraint(['created_uid'], ['user.id'], name='user_created_uid_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='user_role_id_fkey'),
    sa.ForeignKeyConstraint(['updated_uid'], ['user.id'], name='user_updated_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='user_username_unique'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_updated_at', 'user', ['updated_at'], unique=False)
    op.create_index('ix_user_created_at', 'user', ['created_at'], unique=False)
    op.create_table('permission',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Created at'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Updated at'),
    sa.Column('created_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Created User'),
    sa.Column('updated_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Updated User'),
    sa.ForeignKeyConstraint(['created_uid'], ['user.id'], name='permission_created_uid_fkey'),
    sa.ForeignKeyConstraint(['updated_uid'], ['user.id'], name='permission_updated_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='permission_pkey'),
    sa.UniqueConstraint('code', name='permission_code_unique')
    )
    op.create_index('ix_permission_updated_at', 'permission', ['updated_at'], unique=False)
    op.create_index('ix_permission_created_at', 'permission', ['created_at'], unique=False)
    op.create_table('role',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Created at'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Updated at'),
    sa.Column('created_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Created User'),
    sa.Column('updated_uid', sa.INTEGER(), autoincrement=False, nullable=True, comment='Updated User'),
    sa.ForeignKeyConstraint(['created_uid'], ['user.id'], name='role_created_uid_fkey'),
    sa.ForeignKeyConstraint(['updated_uid'], ['user.id'], name='role_updated_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name='role_pkey'),
    sa.UniqueConstraint('code', name='role_code_unique')
    )
    op.create_index('ix_role_updated_at', 'role', ['updated_at'], unique=False)
    op.create_index('ix_role_created_at', 'role', ['created_at'], unique=False)
    # ### end Alembic commands ###
